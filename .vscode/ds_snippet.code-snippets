{
	// Place your ds.ex9.routing workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

		"Add action": {
			"prefix": "action",
			"body": [
				"/** @brief $1*/",
				"class Action$2 : public BaseAction {", 
				"private:",
				"\t$3* node;",
				"public:",
				"\tAction${2:ClassName}(${3:NodeClass}* n) : BaseAction(\"Action${2:ClassName}\") node(n) { }",
				"\tvoid operator()(Event ev) {", 
				"\t\t$0",
				"\t}",
				"};"
			],
			"description": "Add new action derived from BaseAction"
		},
		"Add derived class": {
			"prefix": "class",
			"body": [
				"/** @brief $1*/",
				"class $2 : public BaseNode {", 
				"public:",
				"\t/** @brief Modifies the simulation canvas, e.g.,",
				"\t  * - shows a text string calling displayInfo() or",
				"\t  * - changes the color of a link with changeLinkColor()",
				"\t  */",
				"\tvirtual void refreshDisplay() const override;",
				"\t/** @brief Sets the initial status of this node as well as",
				"\t  * registers the rules this node obeys",
				"\t  */",
				"\tvirtual void initialize() override;",
				"};",
				"$0"
			],
			"description": "The standard body of a class extending BaseNose"
		},
	  "Add license": {
			"prefix": "GNU",
			"body": [
				"//",
				"// This program is free software: you can redistribute it and/or modify",
				"// it under the terms of the GNU Lesser General Public License as published by",
				"// the Free Software Foundation, either version 3 of the License, or",
				"// (at your option) any later version.",
				"//",
				"// This program is distributed in the hope that it will be useful,",
				"// but WITHOUT ANY WARRANTY; without even the implied warranty of",
				"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",
				"// GNU Lesser General Public License for more details",
				"//",
				"// You should have received a copy of the GNU Lesser General Public License",
				"// along with this program.  If not, see http://www.gnu.org/licenses/.",
				"//"
			],
			"description": "The GNU license of this code"
		},
		"Add node description": {
			"prefix": "simple",
			"body": [
				"package dsbase;",
				"import dsbase.BaseNode",
				"",
				"simple $1 extends BaseNode",
				"{",
				"\tparameters:",
				"\t\t@class(${1:ModuleName})",
				"}",
				"$0"
			]
		}
}